<%- include('../layouts/adminhead.ejs', { currentPage: 'products' }) %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap5.min.css">
<script defer src="https://code.jquery.com/jquery-3.7.0.js"></script>
<script defer src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
<script defer src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap5.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>


<script>
  $(document).ready(function(){
    $('#example').DataTable();
  });
</script>
<style>
  /* Style for the overlay background */
  .overlay,.overlay2 {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1;
  }
  
  /* Style for the modal box */
  .custom-modal,.custom-modal1 {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 300px; /* Adjust the width as needed */
    background-color: #fff;
    padding: 20px;
    border: 1px solid #ddd;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    z-index: 2;
  }
  
  .modal-content,.modal-content1 {
    text-align: center;
  }
  
  .close {
    cursor: pointer;
  }
  
    
  </style>
        <div class=" mt-5">
          <div class="row tm-content-row">
            
            <div class="col-sm-12 col-md-12 col-lg-8 col-xl-12 tm-block-col">
              <div class="tm-bg-primary-dark tm-block tm-block-products">
                <h2 class="tm-block-title">Products</h2>
                <div class="">
                  <table id="example" class="table table-striped" style="width:100%">
              <thead><tr>
                <th>ID</th>
                <th>Name</th>
                <th>Category</th>
                <th>Price</th>
                <th>Qty</th>
                <th>OfferId</th>
                <th>Status</th>
                <th>Action</th>

                </tr></thead>
                
                  <tbody>
                    <% if(products.length>0) { %>
                      <% for(let i=0;i<products.length;i++) { %>
                        <% if(products[i].Isdeleted) { %>
                        <tr class="product-row" id="productrow" style="background-color: red;">
                        <%} else {%>
                          <tr class="product-row" id="productrow" style="background-color:'' "> 
                      <%}%>
                      <th scope="row"><%= products[i]._id.toString().slice(-4) %></th>
                      <td><%=products[i].name%> </td>
                      <td><%=products[i].category%></td>
                      <td><%=products[i].price%></td>
                      <td><%=products[i].stockQuantity%></td>
                      <% if (!products[i].offer){%>
                        <td><p>NoOffer</p></td>
                        <%}else{%>
                          <td><%= products[i].offer.toString().slice(-4) %></td>   
                          <%}%>
                      <td style="color:orange">
                      <% if(products[i].availability ){%>
                          Available
                      <%} %>
                      <% if(!products[i].availability){%>
                        Unavailable
                    <%} %>
                    </td>
                      <td class="d-flex">
                        <select id="offer_<%= products[i]._id %>" name="offer" class="form-control h-25" style="margin-right:10px" placeholder="SelectOffer">
                          <option value="" selected disabled>Select an Offer</option>
                         
                          <% for (const offer of offers) { %>
                      
                            <option value="<%= offer._id %>"><%= offer.offerName %></option>
                          <% } %>
                        </select>
                        <button data-productid="<%=products[i]._id%>" class="tm-product-delete-link add-productoffer-button" style="margin-right: 10px;">
                          <i class="fas fa-plus tm-product-delete-icon "></i></button>
                        <a  href="/admin/editproducts?id=<%=products[i]._id%>"class="tm-product-delete-link editbutton"  data-item="<%=products[i]._id%>">
                          <i class="fas fa-pencil-alt tm-product-delete-icon"></i>
                        </a>
                      
                      <button  class="tm-product-delete-link deletebutton" id="deletebutton" data-itemid="<%=products[i]._id%>" <% if(!products[i].Isdeleted) { %>style="display: block; " <%}else{%>style="display:none;" <%}%> >
                        <i class="far fa-trash-alt tm-product-delete-icon"></i>
                      </button>
                     
                      
                      
                        <button  class="tm-product-delete-link restorebutton" id="restorebutton" data-itemid="<%=products[i]._id%>"  <% if(!products[i].Isdeleted) { %>style="display: none; " <%}else{%>style="display:block;"<%}%>n>
                          <i class="fa fa-window-restore" aria-hidden="true"></i>
                        </button>
                        
                      </td>
                    <%}%>
                    <%}else{%>
                      <td colspan="5">No products</td>
                  <%  } %>
                    
              </tr>
          
                  </tbody>
                </table>
              </table>
            </div>
      
          <div >
            <a href="/admin/addproducts" class="btn btn-primary btn-block text-uppercase mb-3">
              Add new product
            </a>

              
              </div>
</div>
</div>
            
<div class="overlay" id="overlay" onclick="closeModal()"></div>
                  <div id="successModal" class="custom-modal">
                    <div class="modal-content">
                        <div class=><a href="index.html"><img src="images/logo.png"></a></div> 
                     <p id="Message"></p>
                      <span class="close" onclick="closeModal()">ok</span>
                     
                    </div>
                  </div>
              </div>
              
              <div class="overlay2" id="overlay2"></div>

              <div id="successModal1" class="custom-modal1">
                <div class="modal-content1">
                  <p id="Message1"></p>
                  <div class="modal-buttons">
                    <button class="confirm-button" id="confirmButton">Confirm</button>
                    <button class="cancel-button" id="cancelButton">Cancel</button>
                  </div>
                </div>
              </div>
    <!-- ... (your existing code) ... -->

       

    
  
 <script src="js/bootstrap.bundle.min.js"></script>
<script src="js/tiny-slider.js"></script>
<script src="js/custom.js"></script>

        <script>
  
      
  document.addEventListener('DOMContentLoaded', function () {
  const deleteElements = document.querySelectorAll('.deletebutton');
  const restoreElements = document.querySelectorAll('.restorebutton');
  
  
  const rows = document.querySelectorAll('.product-row');
  deleteElements.forEach((deleteElement, index) => {
    deleteElement.addEventListener('click', function () {
      const itemid = this.dataset.itemid;
      const restoreElement = restoreElements[index];
      const row=rows[index]

      deleteProduct(itemid, deleteElement, restoreElement,row);
    });
  });
});


    
function deleteProduct(ItemId, deleteElement, restoreElement, row) {
  const overlay = document.getElementById('overlay2')
  const successModal = document.getElementById('successModal1');
  const successMessage = document.getElementById('Message1');

  // Display your custom modal
  overlay.style.display = 'block';
  successModal.style.display = 'block';
  successMessage.innerHTML = 'Are you sure you want to delete this item?';

  // Add event listeners to handle user interaction
  const confirmButton = document.getElementById('confirmButton');
  const cancelButton = document.getElementById('cancelButton');

  confirmButton.addEventListener('click', function () {
    // User confirmed the delete action, proceed with AJAX request
    fetch(`/admin/deleteproducts?id=${ItemId}`, {
      method: 'delete',
    })
      .then(response => {
        if (response.ok) {
          deleteElement.style.display = 'none';
          restoreElement.style.display = 'block';
          row.style.backgroundColor = 'red';
          console.log('Item deleted successfully.');
          location.reload();
        } else {
          console.error('Error deleting item.');
        }
      })
      .catch(error => console.error('Error:', error));

    // Hide the custom modal and overlay
    overlay.style.display = 'none';
    successModal.style.display = 'none';
  });

  cancelButton.addEventListener('click', function () {
    // User canceled the delete action, hide the custom modal and overlay
    overlay.style.display = 'none';
    successModal.style.display = 'none';
  });
}

document.addEventListener('DOMContentLoaded', function() {
  const restoreElements = document.querySelectorAll('.restorebutton');
  const deleteElements = document.querySelectorAll('.deletebutton');
  const rows = document.querySelectorAll('.product-row');
  restoreElements.forEach(function(restoreElement,index) {
    restoreElement.addEventListener('click', function() {
      const ItemId= this.dataset.itemid; // Use 'data-product-id'
      const deleteElement = deleteElements[index];
      const row= rows[index]
      Restoreproduct(ItemId,restoreElement,deleteElement,row);
    });
  });
});
        
function Restoreproduct(ItemId,restoreElement,deleteElement,row) {
  const overlay = document.getElementById('overlay2')
  const successModal = document.getElementById('successModal1');
  const successMessage = document.getElementById('Message1');

  // Display your custom modal
  overlay.style.display = 'block';
  successModal.style.display = 'block';
  successMessage.innerHTML = 'Are you sure you want to restore the item?';

  // Add event listeners to handle user interaction
  const confirmButton = document.getElementById('confirmButton');
  const cancelButton = document.getElementById('cancelButton');

  confirmButton.addEventListener('click', function () {
    fetch(`/admin/restoreproducts?id=${ItemId}`, {
      method: 'put',
    })
      .then(response => {
        if (response.ok) {
          
  

          // Loop through each button and update its style
          
            deleteElement.style.display = 'block';
            restoreElement.style.display = 'none';
          

          row.style.backgroundColor = ''; // Reset the background color
          console.log('Item updated successfully.');
          location.reload(); 
          // Optionally, update the UI to reflect the restoration
        } else {
          // Handle errors
          console.error('Error restoring item.');
        }
      })
      .catch(error => console.error('Error:', error));
      overlay.style.display = 'none';
    successModal.style.display = 'none';
  });

  cancelButton.addEventListener('click', function () {
    // User canceled the delete action, hide the custom modal and overlay
    overlay.style.display = 'none';
    successModal.style.display = 'none';
  });
}

document.addEventListener('DOMContentLoaded', function () {
  const deleteCategories = document.querySelectorAll('.deletecategorybutton');
   deleteCategories.forEach((deleteCategory) => {
    deleteCategory.addEventListener('click', function () {
      console.log(this.dataset)
      const itemId = this.dataset.itemid;
       deletecategoryProduct(itemId);
    });
  });
});


    
function  deletecategoryProduct(ItemId)
{

  // Now you have the itemId and can proceed with the delete operation
  if (confirm('Are you sure you want to delete this item?')) {
    // Make an AJAX request to the delete endpoint
    fetch(`/admin/deletecategory?id=${ItemId}`, {
      method: 'delete',
    })
      .then(response => {
        if (response.ok) {
         
          // Loop through each button and update its style
          window.location.reload();
           // Reset the background color
          console.log('Item deleted successfully.');
         } else {
          // Handle errors
          console.error('Error deleting item.');
        }
      })
      .catch(error => console.error('Error:', error));
  }
}

//categoryOffer
document.addEventListener('DOMContentLoaded', function () {
    const addOfferButtons = document.querySelectorAll('.add-offer-button');

    addOfferButtons.forEach(addOfferButton => {
      addOfferButton.addEventListener('click', function () {
        const categoryId = this.dataset.categoryid;
        console.log(categoryId)
        const offerSelect = document.getElementById(`offer_${categoryId}`);
        console.log(offerSelect)
        const selectedOfferId = offerSelect.value;
           
        // Now you have the categoryId and selectedOfferId, you can proceed with the update operation
        fetch(`/admin/updateCategoryWithOffer?categoryId=${categoryId}&selectedOfferId=${selectedOfferId}`, {
          method: 'put',
        })
          .then(response => {
            if (response.ok) {
              const successModal = document.getElementById('successModal');
                const successMessage = document.getElementById('Message');
                successModal.style.display = 'block';
                successMessage.innerHTML="OfferAddedSucessfully";
                successMessage.style.color="green"
            } else {
              // Handle errors
              const successModal = document.getElementById('successModal');
                const successMessage = document.getElementById('Message');
                successModal.style.display = 'block';
                successMessage.innerHTML="InternalServerError";
                successMessage.style.color="red"
            }
          })
          .catch(error)
          {
            const successModal = document.getElementById('successModal');
                const successMessage = document.getElementById('Message');
                successModal.style.display = 'block';
                successMessage.innerHTML="Something Went Wrong. TryAgain";
                successMessage.style.color="red"
          } 
        }) 
    });
  });

//productOffer
document.addEventListener('DOMContentLoaded', function () {
    const addOfferButtons = document.querySelectorAll('.add-productoffer-button');

    addOfferButtons.forEach(addOfferButton => {
      addOfferButton.addEventListener('click', function () {
        const productId = this.dataset.productid;
      
        const offerSelect = document.getElementById(`offer_${productId}`);
      
        const selectedOfferId = offerSelect.value;
        console.log(selectedOfferId)  
        // Now you have the categoryId and selectedOfferId, you can proceed with the update operation
        fetch(`/admin/updateProductWithOffer?productId=${productId}&selectedOfferId=${selectedOfferId}`, {
          method: 'put',
        })
          .then(response => {
            if (response.ok) {
              const successModal = document.getElementById('successModal');
                const successMessage = document.getElementById('Message');
                successModal.style.display = 'block';
                successMessage.innerHTML="OfferAddedSucessfully";
                successMessage.style.color="green"
            } else {
              // Handle errors
              const successModal = document.getElementById('successModal');
                const successMessage = document.getElementById('Message');
                successModal.style.display = 'block';
                successMessage.innerHTML="InternalServerError";
                successMessage.style.color="red"
            }
          })
          .catch(error)
          {
            const successModal = document.getElementById('successModal');
                const successMessage = document.getElementById('Message');
                successModal.style.display = 'block';
                successMessage.innerHTML="Something Went Wrong. TryAgain";
                successMessage.style.color="red"
          } 
        }) 
    });
  });


  function closeModal() {
        const successModal = document.getElementById('successModal');
        successModal.style.display = 'none';
        window.location.reload();
    }

</script>